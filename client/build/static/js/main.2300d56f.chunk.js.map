{"version":3,"sources":["components/api/api.js","components/Shop.js","components/Sell.js","components/Search.js","components/Home.js","App.js","registerServiceWorker.js","index.js"],"names":["api","getItems","q","axios","get","saveItem","itemData","console","log","post","Menu","react_default","a","createElement","className","Clothes","state","items","API","then","res","_this","setState","data","item","this","length","map","ClothingItem","title","React","Component","props","Shop","menuOpen","Shop_Clothes","Sell","description","price","handleInput","event","_event$target","target","name","value","Object","defineProperty","submitForm","alert","parseFloat","onChange","type","placeholder","onClick","Search","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","fetchSearchResults","query","handleOnInputChange","loading","message","results","cancel","htmlFor","id","aria-hidden","Home","Nav","showHome","showShop","showSell","showSearch","App","currentPage","getPageContents","components_Shop","components_Sell","components_Search","components_Home","showShopPage","showSellPage","showSearchPage","showHomePage","App_Nav","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","catch","error","ReactDOM","render","src_App_0","document","getElementById","URL","process","origin","addEventListener","concat","fetch","response","status","headers","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.2300d56f.chunk.js","sourcesContent":["import axios from \"axios\";\n\nexport default {\n // Gets books from the Google API\n getItems: function(q) {\n   return axios.get(\"/api/items\");\n },\n\n // Saves an book to the database\n saveItem: function(itemData) {\n     console.log('API got sent ', itemData);\n   return axios.post(\"/api/items\", itemData);\n }\n};","import React, { Component } from \"react\";\nimport API from \"./api/api\"\nfunction Menu() {\n    return <div>\n        <ul className=\"clothing-menu\">\n            <li> all </li>\n            <li> feminine </li>\n            <li> masculine </li>\n            <li> tops </li>\n            <li> bottoms </li>\n            <li> dresses / jumpsuits </li>\n            <li> outerwear </li>\n            <li> kicks </li>\n        </ul>\n    </div>\n}\n\n//make shit show up\nclass Clothes extends React.Component {\n    state = {\n        items:[]\n    }\n    componentDidMount(){\n        this.getItems();\n    }\n    getItems = () => {\n        API.getItems().then(res =>\n            this.setState({\n                items: res.data.item\n            })\n        )\n\n    }\n\n    render() {\n        return <div className=\"clothing-item\">\n            {this.state.items.length ?\n                this.state.items.map(item => (\n                    <ClothingItem\n                        title={item.title}\n                    />\n                )) : \"\"}\n\n\n        </div>\n    }\n\n}\n\nfunction ClothingItem(props) {\n    return <div className=\"clothing-item\">{props.title}</div>\n}\nclass Shop extends Component {\n\n    state = { menuOpen: true }\n\n    render() {\n        return (\n            <div>\n                {this.state.menuOpen ? <Menu /> : \"\"}\n                <Clothes />\n            </div>\n\n        )\n    }\n\n}\n\nexport default Shop;","import React, { Component } from \"react\";\nimport API from \"./api/api.js\";\n\n\n\n\nclass Sell extends Component {\n\n    state = {\n        title: \"\",\n        description: \"\",\n        price: null\n    };\n\n    handleInput = event => {\n        const { name, value } = event.target;\n\n        this.setState({\n            [name]: value\n        });\n    };\n\n    submitForm = event => {\n        alert(this.state.description + \"Submitted\")\n        API.saveItem({\n            title:this.state.title || \"none\",\n            description:this.state.description || \"none\",\n            price:parseFloat(this.state.price) || 999.99\n        })\n    };\n\n    render() {\n        return (\n            <div className=\"sell-items\">\n                <div>\n                <input\n                    className=\"title\"\n                    value={this.state.title}\n                    name=\"title\"\n                    onChange={this.handleInput}\n                    type=\"text\"\n                    placeholder=\" title\" />\n                <input\n                    className=\"price\"\n                    value={this.state.price}\n                    name=\"price\"\n                    onChange={this.handleInput}\n                    type=\"text\"\n                    placeholder=\"USD\" />\n                    </div>\n                <textarea\n                    className=\"description\"\n                    value={this.state.description}\n                    name=\"description\"\n                    onChange={this.handleInput}\n                    type=\"text\"\n                    placeholder=\"description\" />\n                <div className=\"new-item\" onClick={this.submitForm}> add new item</div>\n\n            </div>\n\n\n\n        )\n    }\n\n}\n\nexport default Sell;","import React, { Component } from \"react\";\nimport API from \"./api/api\";\nimport axios from \"axios\";\n\n\nclass Search extends Component {\n    constructor(props){\n        super(props);\n        this.state ={\n            query: '',\n            results:{},\n            loading: false,\n            message: ''\n        }\n        this.cancel = \"\";\n    }\n\n    fetchSearchResults = (query) =>{\n        // if(this.cancel){\n        //     this.cancel.cancel();\n        // }\n        // this.cancel = axios.CancelToken.source();\n        // axios.get(seacrhURL, {\n        //     cancelToken: this.cancel.token\n        // }).then(res =>{\n        //     const resultNotFound\n        // })\n\n        API.getItems().then(function(data){\n            console.log(data);\n        })\n\n    };\n\n    handleOnInputChange = (event) =>{\n        const query=event.target.value;\n        this.setState({query, loading:true, message:\"\"});\n    };\n\n    render(){\n        const {query} = this.state;\n        console.log(this.state)\n        return(\n            <div className=\"search-component\">\n               <label className=\"search-label\" htmlFor=\"search-input\">\n                   <input\n                   className=\"search-box\"\n                   type=\"text\"\n                   name=\"query\"\n                   value={query}\n                   id=\"search-input\"\n                   placeholder=\" search\"\n                   onChange={this.handleOnInputChange}\n                   />\n                   <i onClick={this.fetchSearchResults} className=\"fa fa-search\" aria-hidden=\"true\" id=\"search-btn\"/>\n               </label>\n            </div>\n        )\n    }\n}\n//     state = {\n//         query: '',\n//         results: []\n//     }\n// }\n\n// getInfo = () => {\n//     axios.get()\n//       .then(({ data }) => {\n//         this.setState({\n//           results: data.data\n//         })\n//       })\n//   }\n\n// handleInputChange = () => {\n//     this.setState({\n//         query: this.search.value\n//     })\n// }\n\n// render() {\n//     return (\n//       <form>\n//         <input\n//           placeholder=\"search\"\n//           ref={input => this.search = input}\n//           onChange={this.handleInputChange}\n//         />\n//         <p>{this.state.query}</p>\n//       </form>\n//     )\n//   }\n//  }\n \nexport default Search;","import React, { Component } from \"react\";\nimport API from \"./api/api.js\";\nclass Home extends Component{\n    \n}\nexport default Home;","import React, { Component } from \"react\";\nimport Shop from \"./components/Shop.js\";\nimport Sell from \"./components/Sell.js\";\nimport Search from \"./components/Search.js\"\nimport Home from \"./components/Home.js\"\nimport \"./App.css\";\n\n\nclass Nav extends Component{\n  render(){\n    return (\n      <div className=\"nav\">\n        <div className=\"header\" onClick={this.props.showHome}>eleven</div>\n        <div className=\"nav-child\" onClick={this.props.showShop}>shop</div>\n        <div className=\"nav-child\" onClick={this.props.showSell}>sell</div>\n        <div className=\"nav-child\" onClick={this.props.showSearch}>search</div>\n      </div>\n    )\n  }\n}\n\nclass App extends Component {\n\n  state = {\n    currentPage:\"shop\"\n  }\n\n  getPageContents = () => {\n    switch(this.state.currentPage){\n      case 'shop':\n        return  <Shop/>\n      case 'sell':\n        return  <Sell/>\n      case 'search':\n        return <Search/>\n      case 'home':\n        return <Home/>\n    }\n  }\n\n  showShopPage = () => {\n    this.setState({currentPage:'shop'});\n  }\n  showSellPage = () =>{\n    this.setState({currentPage: 'sell'})\n  }\n  showSearchPage = () =>{\n    this.setState({currentPage: 'search'})\n  }\n  showHomePage = () =>{\n    this.setState({currentPage: 'home'})\n  }\n\n\n  render() {\n    return (\n      <div className=\"App\">\n       <Nav showSell={this.showSellPage} showShop={this.showShopPage} showSearch={this.showSearchPage} showHome={this.showHomePage}/>\n       {this.getPageContents()}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (!isLocalhost) {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      } else {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log(\"New content is available; please refresh.\");\n            } else {\n              // At this point, everything has been pre-cached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get(\"content-type\").indexOf(\"javascript\") === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport registerServiceWorker from \"./registerServiceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\nregisterServiceWorker();\n"],"sourceRoot":""}